/*
    a) CMD: mosta Task1ab.modest -X -S -E -O out.dot -D png out.png --no-invariants -F
    b) CMD: modes Task1ab.modest -S ASAP -R Uniform
    
    n       := number of questions asked in a row
    ign     := number of ignores in a row
    total   := total number of questions asked in a run
    
    
a)  Students initiates: wishing to ask a question (raise_hand), asking a question; stop asking
    Lecturer initiates: answering a question
    
b)  (PrLeave) Eventually leaves: 1 = 100% (which is clear, because with infinite time, there will always be three ignores in a row)
    (PrMin5Q) At least five questions are asked: 0.2 = 20%
    (ExQuestions) Number of questions till student leaves: 2.5
    
*/

int ign = 0;
int n = 0;
int total = 0;
bool leave_hall;

action raise_hand, ack_q, ign_q;
action ask_q, stop_asking, answer_q;

// Task b)
property PrLeave = Pmax(<> (leave_hall));
property PrMin5Q = Pmax(<> (leave_hall && total >= 5));
property ExQuestions = Xmax(total | leave_hall);

process Student() {
    alt {
    :: when(ign < 3) raise_hand;
        alt {
        :: ack_q {= n = 0, ign = 0 =};
            do {
                palt {
                :1: ask_q; answer_q {= n = n + 1, total = total + 1 =} // (1/ n+1) probability to continue asking
                :n: stop_asking; break  // (n/n+1) probability to stop asking questions
                }
            }
        :: ign_q {= ign = ign+1 =} 
        }; Student()
    :: when(ign >= 3) {= leave_hall = true =}
    }
}

process Lecturer() {
    raise_hand;
    palt {
    :1: ack_q; 
        do {
            :: ask_q; answer_q
            :: stop_asking; break
        }
    :3: ign_q
    }; Lecturer()
}

par {
:: Student()
:: Lecturer()
}
