To find a reasonable size for N, we wrote a python script to generate the output of the model.
The script  we wrote is:

#!/usr/bin/python

import sys
import os
import string

MAX=int(sys.argv[1])
RUNS=sys.argv[2]

totalTimes = {}
retransmissions = {}

for i in range(1,MAX+1):
    print("Run number "+str(i))
    filename="/tmp/modes_run_"+str(i)+".txt"
    os.system("modes.exe go-back-n.modest -E \"N="+str(i)+"\" -R Uniform -N "+RUNS+" > "+filename)

    print ("Parsing") 

    result = open(filename, 'r')
    TotalTime = False
    Retransmissions = False
    for line in result:
        if TotalTime:
            if "Mean" in line:
                values = line.split(":")
                print ("TotalTime for run " +str(i)+":")
                print (values[1])
                TotalTime = False
                totalTimes[i] = values[1]
        if Retransmissions:
            if "Mean" in line:
                values = line.split(":")
                print ("Retransmissions for run " +str(i)+":")
                print (values[1])
                Retransmissions = False
                retransmissions[i] = values[1]
        if "Property TotalTime" in line:
            TotalTime = True
        if "Property Retransmissions" in line:
            Retransmissions = True

runTimes = 1
minimumTime = totalTimes[runTimes]
runRet = 1
minimumRetrans = retransmissions[runRet]

print ("Run Nr\t|| TotalTime \t\t|| Retransmissions")
for i in totalTimes.keys():
    if (minimumTime > totalTimes[i]):
        minimumTime = totalTimes[i]
        runTimes = i
    if (minimumRetrans > retransmissions[i]):
        minimumRetrans = retransmissions[i]
        runRet=i
    timeStr = str(totalTimes[i]).replace("\n","") + "\t"
    retransStr = str(retransmissions[i]).replace("\n","")
    print (str(i)+"\t||"+ timeStr+"||"+retransStr)

print ("For N="+str(runTimes)+ " minimal time can be achieved as "+ str(minimumTime))
print ("For N="+str(runRet) + " minimal retransmissions can be achieved as "+str(minimumRetrans))


################################################################# Script End

The first argument of the script is the maximal N for which the model should be evaluated. ( -E N=...)
The second argument is the number of runs, that each computation should be done (the -N parameter)

For our data for the evaluation, we generated the following table with the script:

Run Nr	|| TotalTime 		|| Retransmissions
1	|| 3999.36078468206	|| 65.227
2	|| 2539.3657382449	|| 68.8059999999999
3	|| 2098.82153848417	|| 80.5900000000002
4	|| 1874.61228892758	|| 93.145
5	|| 1761.51347644132	|| 107.138
6	|| 1666.54873443263	|| 119.759
7	|| 1612.83775388018	|| 133.821
8	|| 1590.49368307309	|| 149.089
9	|| 1551.69139033685	|| 161.523
10	|| 1593.03449932478	|| 183.81
11	|| 1591.44219536217	|| 201.677
12	|| 1613.19448072577	|| 221.323
13	|| 1633.93900722733	|| 241.866
14	|| 1671.80336444009	|| 266.018
15	|| 1685.88393688089	|| 284.185
16	|| 1681.04993048004	|| 301.701
17	|| 1724.15023460133	|| 328.156
18	|| 1866.07283178986	|| 376.771
19	|| 1880.65676143734	|| 398.509
20	|| 1898.65391148669	|| 421.597

The script computed the following minimal values:
For N=9 minimal time can be achieved as  1551.69139033685

For N=5 minimal retransmissions can be achieved as  107.138

We fixed the number of runs to 1000 as this seems to be large enough to get reasonable values and
with the script automation, no additional work was involved.
The channel capacity is 16.
As one can see in the table we initially tried the range from 1 to 20 to have every possible number inside
the channels capacity and furthermore see results when going beyond the channel capacity.

The table shows that with increasing N, the number of retransmissions that are necessary increases.
For increasing N, the total time first decreases until N=9 and then starts to increase again.
This may be due to a larger N leading to more packets in flight, which means that statistically more packets
can be dropped.

Therefore we see it as reasonable to use the N=9 as the number of retransmissions only slightly increases until
this value and starts to increase faster after reaching N=10.
